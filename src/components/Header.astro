---
import ThemeToggle from "./ThemeToggle.astro";
import LanguageToggle from "./LanguageToggle.astro";
interface Props {
  lang: "ja" | "en";
  id?: string;
}
const { lang, id } = Astro.props;

const currentPath = Astro.url.pathname;
let contactHref = `/${lang}/#contact`;

if (currentPath === `/${lang}/` || currentPath === `/${lang}/about` || currentPath === `/${lang}/resume`) {
  contactHref = "#contact";
}
---

<header
  id={id}
  class="bg-white/80 dark:bg-gray-900/80 backdrop-blur-md sticky top-0 z-50 border-b border-gray-200 dark:border-gray-800"
>
  <div class="container mx-auto px-4 flex justify-between items-center h-16">
    <a
      href={`/${lang}/`}
      class="text-xl font-bold text-gray-900 dark:text-white"
    >
      Haruta Watanabe
    </a>

    <nav class="hidden md:flex items-center space-x-6">
      <a
        href={`/${lang}/about`}
        class="text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white transition-colors"
        >About</a
      >
      <a
        href={`/${lang}/projects/1`}
        class="text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white transition-colors"
        >Projects</a
      >
      <a
        href={`/${lang}/blog/1`}
        class="text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white transition-colors"
        >Blog</a
      >
      <a
        href={contactHref}
        class="text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white transition-colors"
        >Contact</a
      >
      <div class="flex items-center gap-x-4">
        <ThemeToggle />
        <LanguageToggle lang={lang} />
      </div>
    </nav>

    <button
      id="hamburger-button"
      class="md:hidden p-2 rounded-md"
      aria-label="Open Menu"
    >
      <svg
        id="menu-open-icon"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
      <svg
        id="menu-close-icon"
        class="h-6 w-6 hidden"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>

  <div
    id="mobile-menu"
    class="hidden md:hidden absolute top-16 left-0 w-full bg-white dark:bg-gray-900"
  >
    <nav class="container mx-auto px-4 py-8 flex flex-col space-y-6">
      <a
        href={`/${lang}/about`}
        class="text-lg text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white"
        >About</a
      >
      <a
        href={`/${lang}/projects/1`}
        class="text-lg text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white"
        >Projects</a
      >
      <a
        href={`/${lang}/blog/1`}
        class="text-lg text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white"
        >Blog</a
      >
      <a
        href={contactHref}
        class="text-lg text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white"
        >Contact</a
      >
      <div class="pt-4 border-t border-gray-200 dark:border-gray-700">
        <div class="flex items-center gap-x-4">
          <ThemeToggle />
          <LanguageToggle lang={lang} />
        </div>
      </div>
    </nav>
  </div>
</header>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const hamburgerButton = document.getElementById("hamburger-button");
    const mobileMenu = document.getElementById("mobile-menu");
    const openIcon = document.getElementById("menu-open-icon");
    const closeIcon = document.getElementById("menu-close-icon");

    if (hamburgerButton && mobileMenu && openIcon && closeIcon) {
      hamburgerButton.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");
        openIcon.classList.toggle("hidden");
        closeIcon.classList.toggle("hidden");
      });
    }
  });
</script>
