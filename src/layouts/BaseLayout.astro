---
import "../styles/global.css";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import CookieConsent from "../components/CookieConsent.astro";
import Analytics from "../components/Analytics.astro";
import JsonLD from "../components/JsonLD.astro";
const lang = Astro.url.pathname.startsWith("/en") ? "en" : "ja";
export interface Props {
  description?: string;
}
const { description = "This is Haruta Watanabe's portfolio site. It showcases projects and skills related to data science and application development." } = Astro.props;
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>Haruta Watanabe's Portfolio</title>
    <meta name="description" content={description} />
    <script is:inline>
      (function () {
        const stored = localStorage.getItem("theme");
        const prefersDark =
          window.matchMedia &&
          window.matchMedia("(prefers-color-scheme: dark)").matches;
        const useDark = stored === "dark" || (stored === null && prefersDark);
        document.documentElement.classList.toggle("dark", useDark);
      })();
    </script>
    <JsonLD />
    <Analytics id={import.meta.env.PUBLIC_GA_ID} />
  </head>

  <body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100">
    <Header id="main-header" lang={lang} />
    <main class="container mx-auto px-4 py-8">
      <slot />
    </main>

    <Footer id="main-footer" lang={lang} />
    <CookieConsent lang={lang} />

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const themeToggleBtns = document.querySelectorAll(".theme-toggle");

        if (themeToggleBtns.length > 0) {
          const isDarkInitially =
            document.documentElement.classList.contains("dark");
          document
            .querySelectorAll(".theme-toggle-light-icon")
            .forEach((el) => el.classList.toggle("hidden", !isDarkInitially));
          document
            .querySelectorAll(".theme-toggle-dark-icon")
            .forEach((el) => el.classList.toggle("hidden", isDarkInitially));

          themeToggleBtns.forEach((btn) => {
            btn.addEventListener("click", () => {
              const isDark = document.documentElement.classList.toggle("dark");
              localStorage.setItem("theme", isDark ? "dark" : "light");

              document
                .querySelectorAll(".theme-toggle-light-icon")
                .forEach((el) => el.classList.toggle("hidden", !isDark));
              document
                .querySelectorAll(".theme-toggle-dark-icon")
                .forEach((el) => el.classList.toggle("hidden", isDark));
            });
          });
        }
      });
    </script>
  </body>
</html>
